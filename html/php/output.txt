sum
main
a:$s2
c:$s0
b:$s1

exp: c=a b
c # variable # sint32
a # variable # sint32
b # variable # sint32
= # symbol # NoVtype


i,tp,vtype: c variable sint32
i,tp,vtype: a variable sint32
i,tp,vtype: b variable sint32
i,tp,vtype: = symbol NoVtype
r: ('b', 'variable', 'sint32')
l: ('a', 'variable', 'sint32')
assignr  ('b', 'variable', 'sint32') $a3
assignr  ('c', 'variable', 'sint32') $v1
exp: 0
0 # const # sint32


i,tp,vtype: 0 const sint32
assignr  ('0', 'const', 'sint32') $v0

c:main_c

exp: c[0]=1
c[0] # array # c
1 # const # sint32
= # symbol # NoVtype


i,tp,vtype: c[0] array c
i,tp,vtype: 1 const sint32
i,tp,vtype: = symbol NoVtype
r: ('1', 'const', 'sint32')
l: ('c[0]', 'array', 'c')
assignr  ('1', 'const', 'sint32') $a3
